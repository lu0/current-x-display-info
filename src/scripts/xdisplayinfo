#!/usr/bin/env bash

#
# This script gets information of the current display,
# where "current display" is the display the mouse is hovered over.
#
# Can be used as Bash library by sourcing it from another script
# and accessing its properties by using `xdisplayinfo::<property name>`,
# or as a command (after adding it to your $PATH).
#
# https://github.com/lu0/current-x-display-info
#

declare -A _PROPERTIES=(
    ["name"]=""
    ["resolution"]=""
    ["offset-x"]=""
    ["offset-y"]=""
    ["width"]=""
    ["height"]=""
    ["window-id"]=""
)


# Fills hashmap _PROPERTIES
xdisplayinfo::__reload() {
    # Regexps to match contiguous numbers and
    # patterns [width]x[height]+[offset-x]+[offset-y]
    local -r nums_re="[0-9]+"
    local -r dims_re="${nums_re}x${nums_re}\+${nums_re}\+${nums_re}"

    # `xrandr --current` is faster than plain `xrandr`,
    # since it doesn't re-evaluate for hardware changes
    local connected_info; connected_info=$(xrandr --current |grep -w connected)

    local display_names
    readarray -t display_names < <(echo "$connected_info" | cut -d" " -f1)

    local dimensions
    readarray -t dimensions < <(echo "$connected_info" | grep -Po "$dims_re")


    local display_index
    for display_index in "${!display_names[@]}"; do

        local parsed_dimension_properties
        readarray -t parsed_dimension_properties < \
            <(echo "${dimensions[$display_index]}" | grep -Po "$nums_re")

        local width="${parsed_dimension_properties[0]}"
        local height="${parsed_dimension_properties[1]}"
        local x_left="${parsed_dimension_properties[2]}"
        local y_top="${parsed_dimension_properties[3]}"

        local x_right=$(( x_left + width ))
        local y_bottom=$(( y_top + height ))

        # Evaluates to mouse variables: X, Y, SCREEN, WINDOW
        eval "$(xdotool getmouselocation --shell)"

        if (( X > x_left && X < x_right )) && (( Y > y_top && Y < y_bottom ))
        then
            _PROPERTIES[name]="${display_names[$display_index]}"
            _PROPERTIES[resolution]="${width}x${height}"
            _PROPERTIES[width]="$width"
            _PROPERTIES[height]="$height"
            _PROPERTIES[offset-x]="$x_left"
            _PROPERTIES[offset-y]="$y_top"
            _PROPERTIES[window-id]="$WINDOW"
            break
        fi
    done
}

xdisplayinfo::name() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[name]}"
}

xdisplayinfo::resolution() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[resolution]}"
}

xdisplayinfo::offset-x() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[offset-x]}"
}

xdisplayinfo::offset-y() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[offset-y]}"
}

xdisplayinfo::width() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[width]}"
}

xdisplayinfo::height() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[height]}"
}

xdisplayinfo::window-id() {
    xdisplayinfo::__reload
    echo "${_PROPERTIES[window-id]}"
}

xdisplayinfo::__parse_cli_options() {

    while getopts h-: OPT; do
        readonly long_option="$OPT$OPTARG"
        case $long_option in
            -all)
                xdisplayinfo::__reload
                echo -e "name:\t\t ${_PROPERTIES[name]}"
                echo -e "resolution:\t ${_PROPERTIES[resolution]}"
                echo -e "width:\t\t ${_PROPERTIES[width]}"
                echo -e "height:\t\t ${_PROPERTIES[height]}"
                echo -e "offset-x:\t ${_PROPERTIES[offset-x]}"
                echo -e "offset-y:\t ${_PROPERTIES[offset-y]}"
                echo -e "window-id:\t ${_PROPERTIES[window-id]}"
                exit 0
                ;;
            *)
                property_name="${long_option##-}"
                xdisplayinfo::"$property_name" 2>/dev/null && exit 0
                xdisplayinfo::_show_usage && exit 1
                ;;
        esac
    done

    xdisplayinfo::_show_usage && exit 1
}

xdisplayinfo::_show_usage() {
        echo -e "\nGet information of the current display on systems using X."
        echo -e "\nUSAGE:"
        echo -e "   xdisplayinfo   [OPTIONS]"
        echo -e "\nOPTIONS:"
        echo -e "   --name        Name of the current display."
        echo -e "   --resolution  Resolution."
        echo -e "   --offset-x    X coordinate of the top-left corner."
        echo -e "   --offset-y    Y coordinate of the top-left corner."
        echo -e "   --width       Width (resolution along the X axis)."
        echo -e "   --height      Height (resolution along the Y axis)."
        echo -e "   --window-id   ID of the active window (decimal)."
        echo -e "   --all         All previous properties.\n"
}

if [[ "${#BASH_SOURCE[@]}" -eq 1 ]]; then
    xdisplayinfo::__parse_cli_options "$@"
fi
